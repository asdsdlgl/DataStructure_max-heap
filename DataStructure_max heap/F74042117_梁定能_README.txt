HW5_1
首先先用fscanf讀入檔案並且利用一個char將','去除，同時將讀入的數字一個一個放入heap中，並同時做max heap的動作，
然後將其印出，然後輸入Y/N如果是Y就繼續進行如果為N就結束，如果非N/Y將會問到Y/N為止，再將Choice priority以及改變後的Choice priority輸入
之後就從heap中查詢指定的priority，並同時計時執行時間，當有相對應的heap時就呼叫changorder這個function並改變其priority，changorder這function
分為如果輸入數字比原本的priority大或是比原本的priority小這兩種，如果更大，priority將往tree的上端找，直到相對應的位置，如果比較小，就要判斷
左右子樹的大小，選左右子樹中較大者並跟其交換，以此往下找到期相對應的位置，最後計算其時間並印出，然後進行下一輪的改變，直到輸入N，而如果輸入
的數字不再HEAP中，會重新要求再輸入一次，不過，因為程式事實上並不複雜也不需要很多的執行時間，而且因為clock_t的精確度為10^(-3)sec，所以執行
時間可能為0.000000，因為執行時間太短了，可能會小於10^(-3)sec。。

HW5_2
此題為HW5_1的變化題，基本上敘述如5_1，而不同處為此題為刪除HEAP，並且當呼叫changeorder時，將選擇的element的priority改變成所有heap中的最大，
也就是heap[1]+1，然後再呼叫pop將tree中最上層也就是heap[1]，給pop掉，這樣就可以刪除特定的element並且符合max heap的定義，不過，因為程式事實上
並不複雜也不需要很多的執行時間，而且因為clock_t的精確度為10^(-3)sec，所以執行時間可能為0.000000，因為執行時間太短了，可能會小於10^(-3)sec。